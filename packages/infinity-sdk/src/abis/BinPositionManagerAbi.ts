export const BinPositionManagerAbi = [
  {
    type: 'constructor',
    inputs: [
      { name: '_vault', type: 'address', internalType: 'contract IVault' },
      { name: '_binPoolManager', type: 'address', internalType: 'contract IBinPoolManager' },
      { name: '_permit2', type: 'address', internalType: 'contract IAllowanceTransfer' },
      { name: '_weth9', type: 'address', internalType: 'contract IWETH9' },
    ],
    stateMutability: 'nonpayable',
  },
  { type: 'receive', stateMutability: 'payable' },
  {
    type: 'function',
    name: 'WETH9',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IWETH9' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'approveForAll',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'approved', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'balanceOf',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'balanceOfBatch',
    inputs: [
      { name: 'owners', type: 'address[]', internalType: 'address[]' },
      { name: 'ids', type: 'uint256[]', internalType: 'uint256[]' },
    ],
    outputs: [{ name: 'balances', type: 'uint256[]', internalType: 'uint256[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'batchTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'ids', type: 'uint256[]', internalType: 'uint256[]' },
      { name: 'amounts', type: 'uint256[]', internalType: 'uint256[]' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'binPoolManager',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IBinPoolManager' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'initializePool',
    inputs: [
      {
        name: 'key',
        type: 'tuple',
        internalType: 'struct PoolKey',
        components: [
          { name: 'currency0', type: 'address', internalType: 'Currency' },
          { name: 'currency1', type: 'address', internalType: 'Currency' },
          { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
          { name: 'poolManager', type: 'address', internalType: 'contract IPoolManager' },
          { name: 'fee', type: 'uint24', internalType: 'uint24' },
          { name: 'parameters', type: 'bytes32', internalType: 'bytes32' },
        ],
      },
      { name: 'activeId', type: 'uint24', internalType: 'uint24' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'isApprovedForAll',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'lockAcquired',
    inputs: [{ name: 'data', type: 'bytes', internalType: 'bytes' }],
    outputs: [{ name: '', type: 'bytes', internalType: 'bytes' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'modifyLiquidities',
    inputs: [
      { name: 'payload', type: 'bytes', internalType: 'bytes' },
      { name: 'deadline', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'modifyLiquiditiesWithoutLock',
    inputs: [
      { name: 'actions', type: 'bytes', internalType: 'bytes' },
      { name: 'params', type: 'bytes[]', internalType: 'bytes[]' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'msgSender',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'multicall',
    inputs: [{ name: 'data', type: 'bytes[]', internalType: 'bytes[]' }],
    outputs: [{ name: 'results', type: 'bytes[]', internalType: 'bytes[]' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'name',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'permit',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      {
        name: 'permitSingle',
        type: 'tuple',
        internalType: 'struct IAllowanceTransfer.PermitSingle',
        components: [
          {
            name: 'details',
            type: 'tuple',
            internalType: 'struct IAllowanceTransfer.PermitDetails',
            components: [
              { name: 'token', type: 'address', internalType: 'address' },
              { name: 'amount', type: 'uint160', internalType: 'uint160' },
              { name: 'expiration', type: 'uint48', internalType: 'uint48' },
              { name: 'nonce', type: 'uint48', internalType: 'uint48' },
            ],
          },
          { name: 'spender', type: 'address', internalType: 'address' },
          { name: 'sigDeadline', type: 'uint256', internalType: 'uint256' },
        ],
      },
      { name: 'signature', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [{ name: 'err', type: 'bytes', internalType: 'bytes' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'permit2',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IAllowanceTransfer' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'permitBatch',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      {
        name: '_permitBatch',
        type: 'tuple',
        internalType: 'struct IAllowanceTransfer.PermitBatch',
        components: [
          {
            name: 'details',
            type: 'tuple[]',
            internalType: 'struct IAllowanceTransfer.PermitDetails[]',
            components: [
              { name: 'token', type: 'address', internalType: 'address' },
              { name: 'amount', type: 'uint160', internalType: 'uint160' },
              { name: 'expiration', type: 'uint48', internalType: 'uint48' },
              { name: 'nonce', type: 'uint48', internalType: 'uint48' },
            ],
          },
          { name: 'spender', type: 'address', internalType: 'address' },
          { name: 'sigDeadline', type: 'uint256', internalType: 'uint256' },
        ],
      },
      { name: 'signature', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [{ name: 'err', type: 'bytes', internalType: 'bytes' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'positions',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct PoolKey',
        components: [
          { name: 'currency0', type: 'address', internalType: 'Currency' },
          { name: 'currency1', type: 'address', internalType: 'Currency' },
          { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
          { name: 'poolManager', type: 'address', internalType: 'contract IPoolManager' },
          { name: 'fee', type: 'uint24', internalType: 'uint24' },
          { name: 'parameters', type: 'bytes32', internalType: 'bytes32' },
        ],
      },
      { name: '', type: 'uint24', internalType: 'uint24' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'symbol',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalSupply',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'vault',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IVault' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'ApprovalForAll',
    inputs: [
      { name: 'account', type: 'address', indexed: true, internalType: 'address' },
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'approved', type: 'bool', indexed: false, internalType: 'bool' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TransferBatch',
    inputs: [
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'from', type: 'address', indexed: true, internalType: 'address' },
      { name: 'to', type: 'address', indexed: true, internalType: 'address' },
      { name: 'ids', type: 'uint256[]', indexed: false, internalType: 'uint256[]' },
      { name: 'amounts', type: 'uint256[]', indexed: false, internalType: 'uint256[]' },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'AddLiquidityInputActiveIdMismatch', inputs: [] },
  { type: 'error', name: 'BinFungibleToken_AddressThisOrZero', inputs: [] },
  {
    type: 'error',
    name: 'BinFungibleToken_BurnExceedsBalance',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'id', type: 'uint256', internalType: 'uint256' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'BinFungibleToken_InvalidLength', inputs: [] },
  {
    type: 'error',
    name: 'BinFungibleToken_SelfApproval',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'BinFungibleToken_SpenderNotApproved',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'spender', type: 'address', internalType: 'address' },
    ],
  },
  {
    type: 'error',
    name: 'BinFungibleToken_TransferExceedsBalance',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'id', type: 'uint256', internalType: 'uint256' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'ContractLocked', inputs: [] },
  { type: 'error', name: 'DeadlinePassed', inputs: [{ name: 'deadline', type: 'uint256', internalType: 'uint256' }] },
  {
    type: 'error',
    name: 'DeltaNotNegative',
    inputs: [{ name: 'currency', type: 'address', internalType: 'Currency' }],
  },
  {
    type: 'error',
    name: 'DeltaNotPositive',
    inputs: [{ name: 'currency', type: 'address', internalType: 'Currency' }],
  },
  { type: 'error', name: 'IdOverflows', inputs: [{ name: '', type: 'int256', internalType: 'int256' }] },
  {
    type: 'error',
    name: 'IdSlippageCaught',
    inputs: [
      { name: 'activeIdDesired', type: 'uint256', internalType: 'uint256' },
      { name: 'idSlippage', type: 'uint256', internalType: 'uint256' },
      { name: 'activeId', type: 'uint24', internalType: 'uint24' },
    ],
  },
  { type: 'error', name: 'InputLengthMismatch', inputs: [] },
  { type: 'error', name: 'InsufficientBalance', inputs: [] },
  { type: 'error', name: 'InvalidEthSender', inputs: [] },
  { type: 'error', name: 'InvalidTokenID', inputs: [] },
  {
    type: 'error',
    name: 'MaximumAmountExceeded',
    inputs: [
      { name: 'maximumAmount', type: 'uint128', internalType: 'uint128' },
      { name: 'amountRequested', type: 'uint128', internalType: 'uint128' },
    ],
  },
  {
    type: 'error',
    name: 'MinimumAmountInsufficient',
    inputs: [
      { name: 'minimumAmount', type: 'uint128', internalType: 'uint128' },
      { name: 'amountReceived', type: 'uint128', internalType: 'uint128' },
    ],
  },
  { type: 'error', name: 'NotVault', inputs: [] },
  { type: 'error', name: 'SafeCastOverflow', inputs: [] },
  { type: 'error', name: 'UnsupportedAction', inputs: [{ name: 'action', type: 'uint256', internalType: 'uint256' }] },
  { type: 'error', name: 'VaultMustBeUnlocked', inputs: [] },
] as const
